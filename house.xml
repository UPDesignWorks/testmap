<krpano version="1.19" title="house" debugmode="true">

	<events name="houseEve" onxmlcomplete="set(layer['mapcontainer'].visible,true)"/>
	<events name="house0000Eve" onnewscene="openmap();"/>
	<action name="startups" autorun="onstart">
		<!-- trace("haha",scene[0].name) -->
		if(startscenes === null OR !scene[get(startscenes)], copy(startscenes,scene[0].name); );
		loadscene(get(startscenes)); 
		set(layer['mapcontainer'].visible,true);     
		trace("加载完成");
	</action>
	<!-- 自定义地图 -->
	<!--地图按钮-->
<layer name="huxing"  url="skin/close_Map.png" align="lefttop" scale="1.2" zorder="2" alpha="0.75" x="750" y="0" keep="true" onclick="closemap();" />
<layer name="type2"  url="skin/Map_333.png" align="lefttop" scale="1" zorder="2" alpha="0.75" x="0" y="400" keep="true"  onclick="type2();" parent="huxing" />
<layer name="type4"  url="skin/Map_111.png" align="lefttop" scale="1" zorder="2" alpha="0.75" x="0" y="200" keep="true"  onclick="type4();" parent="huxing" />
<layer name="type8"  url="skin/Map_2222.png" align="lefttop" scale="1" zorder="2" alpha="0.75" x="0" y="300" keep="true" parent="huxing"  />
<!--地图按钮-->
	<layer name="mapcontainer" visible="false" keep="true" type="container" bgcolor="0x000000" bgalpha="0.7" bgroundedge="0.5"  x="-800" y="0" width="800" height="650" parent="huxing">
		<!-- handcursor当鼠标悬浮上面显示手势 -->
		
		
		<layer name="map" url="skin/map01.jpg" align="center" x="0" y="0" width="prop" height=" 600" handcursor="false" scalechildren="false" parent="mapcontainer">
			<!-- 雷达遮罩部分 -->
			<!-- maskchildren:当设置为true时，父元素之外的所有子元素将被剪切/屏蔽掉。 -->
			<layer name="radarmask" type="container" align="lefttop" width="100%" height="100%" maskchildren="true">
				<!-- 雷达插件 zoder=1 在开始时为隐藏，只有激活activetespot这个action时才会显示 zorder为叠放次序 数字越大越靠前 -->
				<layer 
					name="radar" 
					visible="false"
					url="plugins/radar.swf"
					alturl="plugins/radar.js"
					align="lefttop"
					edge="center"
					zorder="1"
					scale="0.7"
			       	fillcolor="0xFFFFFF" fillalpha="0.8"
			       	linecolor="0xFF0000" linewidth="0.0" linealpha="0.8"
			       	headingoffset="50"
				/>
				



				<!-- 热点 zorder=2，用style来统一处理 所有layer都载入了一个名为spot的style，注意这里spot是由0开始，而不是由1开始的，因此在一般情况下，地图点与场景一一对应，而场景的index是从0开始的，所以我们可以利用这一点提高代码的可读性-->
				<layer name="spot0" style="spot" x="570" y="110" />
				<layer name="spot1" style="spot" x="470" y="215" />
				<layer name="spot2" style="spot" x="450"  y="305"  />
				
				<layer name="spot3" style="spot" x="375"  y="348"   />
				
				<layer name="spot4" style="spot" x="125"  y="450"  />
				
				
			<layer name="spot5" url="skin/home.png"  align="lefttop" edge="center" x="710" y="550" zorder="2" onclick="restartmap();"  parent="mapcontainer" />  
			
				<!-- 激活的热点 zorder=3 开始时候隐藏，在这里是一个绿色的地图点， 表示当前的场景-->
				<layer name="activespot" url="skin/vtourskin_mapspotactive.png" scale="0.5" oy="-17" align="lefttop" edge="center" zorder="3" visible="false"/>
			</layer>
		</layer>
	</layer>
	
<!-- 地图点中相同的代码，都写在了style里面，修改的时候只需要修改style里面的代码，提高了效率。在onclick里，先是用subtxt得出spot后面的数字，也就是index，然后检查是否点击的热点就是当前场景，因为没有必要点击当前场景的热点又载入一遍，如果是点击其他的热点，则载入其他场景，载入场景的loadscene中利用了之前得到的spotid，这样就不用每次都写场景的名字了。-->
	<style 
		name="spot"
		url="skin/vtourskin_mapspot.png"
		scale="0.5"
		oy="-17"
		align="lefttop"
		edge="center"
		zorder="2"
		onclick="activeScene()"
		/>
	<action name="activeScene">
		<!-- 将当前点击的layer的名字截取一下,得到后面的数字,spot1 => 1,然后将该数字和场景的下标进行对比,如果是点击的是当前已展示的scene则不加载,如果是其他的场景,则重新通过loadscene重新加载 -->
		subtxt(spotid,get(name),4,2);
		if(spotid != scene[get(xml.scene)].index,
			loadscene(get(scene[get(spotid)].name),null,MERGE,BLEND(1,easeinoutback));
		);
	</action>
	<action name="activatespot">
		trace("hahahha");
	   <!-- 因此绿色地图点会在每次激活时替换蓝色普通地图点，因此每次激活之前，首先保证所有蓝色地图点是可见的，如果没有下面这个代码，则会使得上一个场景的蓝色地图点消失，这里用的是一个循环语句-->  
	    for(set(i,0),i LT scene.count,inc(i),  
	    txtadd(spotname,'spot',get(i));  
	    set(layer[get(spotname)].visible, true);  
	    );  
	    <!--这样就使得这个activetespot的参数只要一个就可以了-->  
	    trace(get(xml.scene));
	    <!-- 将当前激活的场景下标与spot和并,得到spot1,在通过合成后的名字得到layer与此名称相同的标记的坐标,然后将此坐标赋给雷达插件 -->
	    txtadd(spotidnow,'spot',get(scene[get(xml.scene)].index));
	    trace(get(spotidnow));
	    copy(layer[radar].x, layer[get(spotidnow)].x);  
	    copy(layer[radar].y, layer[get(spotidnow)].y);  
	    copy(layer[activespot].x, layer[get(spotidnow)].x);  
	    copy(layer[activespot].y, layer[get(spotidnow)].y);  
	  
	    <!-- 将第二个参数赋值到雷达的heading -->  
	    set(layer[radar].heading, %1);  
	  
	        <!-- 显示雷达和绿色激活热点，以及隐藏当前场景的地图点 -->  
	    set(layer[radar].visible, true);  
	    set(layer[activespot].visible, true);  
	    set(layer[get(spotidnow)].visible, false);
	</action>
	
		
		
	<scene name="scene_2_4" title="捷運GE02站正投影" onstart="activatespot(180)" thumburl="panos/2_4.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="12.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/2_4.tiles/preview.jpg" />

		<image>
			<cube url="panos/2_4.tiles/pano_%s.jpg" />
			<mobile>
				<cube url="panos/2_4.tiles/mobile_%s.jpg" />
			</mobile>
			
		</image>


	</scene>

	<scene name="scene_2_6" title="龍東路上" onstart="activatespot(170)" thumburl="panos/2_6.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="12.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/2_6.tiles/preview.jpg" />

		<image>
			<cube url="panos/2_6.tiles/pano_%s.jpg" />
			<mobile>
				<cube url="panos/2_6.tiles/mobile_%s.jpg" />
			</mobile>
		</image>

	</scene>

	<scene name="scene_2_1" title="文化公園" onstart="activatespot(170)" thumburl="panos/2_1.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="30" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="12.0" fovmin="300" fovmax="140" limitview="auto" />

		<preview url="panos/2_1.tiles/preview.jpg" />

		<image>
			<cube url="panos/2_1.tiles/pano_%s.jpg" />
			<mobile>
				<cube url="panos/2_1.tiles/mobile_%s.jpg" />
			</mobile>
		</image>

	</scene>

	<scene name="scene_2_2" title="忠貞市場" onstart="activatespot(25)" thumburl="panos/2_2.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="180" vlookat="0" fovtype="MFOV" fov="120" maxpixelzoom="12.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/2_2.tiles/preview.jpg" />

		<image>
			<cube url="panos/2_2.tiles/pano_%s.jpg" />
			<mobile>
				<cube url="panos/2_2.tiles/mobile_%s.jpg" />
			</mobile>
		</image>

	</scene>
	
	<scene name="scene_2_5" title="龍岡圓環上" onstart="activatespot(5)" thumburl="panos/2_5.tiles/thumb.jpg" lat="" lng="" heading="">

		<view hlookat="0" vlookat="15" fovtype="MFOV" fov="120" maxpixelzoom="12.0" fovmin="70" fovmax="140" limitview="auto" />

		<preview url="panos/2_5.tiles/preview.jpg" />

		<image>
			<cube url="panos/2_5.tiles/pano_%s.jpg" />
			<mobile>
				<cube url="panos/2_5.tiles/mobile_%s.jpg" />
			</mobile>
		</image>

	</scene>
	
	<action name="closemap">
		<!--设定下一次onclick的动作-->
        set(onclick, openmap() );
        <!-- 改变XY坐标，将导航图容器移出屏幕，移出过程不设置，即为默认0.5秒-->
        tween(layer[huxing].x,0,0.5);
		 tween(layer[huxing].y,0,0.5);
		
     </action>
    <action name="openmap">
		<!--设定下一次onclick的动作-->
        set(onclick, closemap() );
       <!-- 改变XY坐标，将导航图容器移入屏幕，移入过程为1秒-->
        tween(layer[huxing].x,750,0.5);
		tween(layer[huxing].y,0,0.5);
    </action>
	<action name="restartmap">
		 set(layer['huxing'].visible,false);
		  loadpanoscene('tour.xml','scene_0') 
		  

     </action>

<action name="type2">
		
		
		  loadpanoscene('house1.xml','scene6') ;
		  
set(layer['huxing'].visible,false);
set(layer['huxing1'].visible,true);



     </action>
	
	<action name="type4">
		
		
		  loadpanoscene('house2.xml','scene18') ;
		  
set(layer['huxing'].visible,false);
set(layer['huxing2'].visible,true);
     </action>
</krpano>
